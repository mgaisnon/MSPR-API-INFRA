name: Deploy Infra

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  FLY_API_TOKEN: fm2_lJPECAAAAAAACfFZxBAS3nWWcbdLGvzdSJYgbOCbwrVodHRwczovL2FwaS5mbHkuaW8vdjGUAJLOABMryx8Lk7lodHRwczovL2FwaS5mbHkuaW8vYWFhL3YxxDzKPld+9Ad7zBPrheJ6dmoKZX7cga3FjtEmOHj7uB/w0d1PWdwWFotzRKzOCvD78mntt5K3a76pXtODeb/ETlhE2pfl/+dZ8Ek30mJY/wuRqdb46tO+zBTo2orlESwNOPBzVkfu3e29PptNzJC3TjM6UQ7s7p26KDhAbfm/KhmUmi/ZkrwWBjp3MU3RX8QgRPmz/h/ZKL4N2ofU0WxITKntm5+wn3BLgySGcu6XSQ0=,fm2_lJPETlhE2pfl/+dZ8Ek30mJY/wuRqdb46tO+zBTo2orlESwNOPBzVkfu3e29PptNzJC3TjM6UQ7s7p26KDhAbfm/KhmUmi/ZkrwWBjp3MU3RX8QQl/cd45J/4WOJqEQXecAKtMO5aHR0cHM6Ly9hcGkuZmx5LmlvL2FhYS92MZYEks5otdJczmi11NIXzgASbNgKkc4AEmzYxCACfpgnnAcw1e+0JSiF4ZvwY6mSjrbrAwkdZTNXTVxjmw==,fo1_LXtRSvXqZXxA2-AGlRSW47qOCXiUZsLaxKrUp-pPnmU


jobs:
  start:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start infra locally
        run: |
          export IMG_API_CLIENTS=ghcr.io/mgaisnon/mspr-api-clients:latest
          export IMG_API_PRODUITS=ghcr.io/mgaisnon/mspr-api-produits:latest
          export IMG_API_COMMANDES=ghcr.io/mgaisnon/mspr-api-commandes:latest

          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d

      - name: Wait for DB & RabbitMQ healthchecks
        run: |
          services=("rabbitmq" "db-clients" "db-produits" "db-commandes")
          for service in "${services[@]}"; do
            echo "⏳ Waiting for $service..."
            for i in {1..20}; do
              status=$(docker inspect --format='{{json .State.Health.Status}}' $service || echo "null")
              if [[ "$status" == "\"healthy\"" ]]; then
                echo "✅ $service is healthy"
                break
              else
                echo "❌ $service not ready (try $i)"
                sleep 5
              fi
              if [ $i -eq 20 ]; then
                echo "💥 $service failed healthcheck"
                docker logs $service
                exit 1
              fi
            done
          done

      - name: Check APIs containers are running
        run: |
          apis=("api-clients" "api-produits" "api-commandes")
          for api in "${apis[@]}"; do
            status=$(docker inspect --format='{{.State.Status}}' $api || echo "null")
            if [[ "$status" == "running" ]]; then
              echo "✅ $api is running"
            else
              echo "💥 $api is not running"
              docker logs $api
              exit 1
            fi
          done

      - name: Show running containers
        run: docker ps -a
  
  deploy:
    runs-on: ubuntu-latest
    needs : [start]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Fly CLI
        run: |
          curl -L https://fly.io/install.sh | sh
          echo "${HOME}/.fly/bin" >> $GITHUB_PATH

      - name: Fly.io auth
        run: flyctl auth login --access-token "${FLY_API_TOKEN}"

      - name: Deploy app
        run : flyctl deploy --config ./fly.toml --remote-only

      - name: Ensure RabbitMQ volume exists
        run: |
          flyctl volume create rabbitmq_data -a mspr-rabbitmq -r cdg -n 1 || true

      - name: Deploy RabbitMQ
        run: flyctl deploy --config infra/rabbitmq/fly.toml --remote-only

      - name: Deploy Prometheus
        run: flyctl deploy --config infra/prometheus/fly.toml --remote-only

      - name: Deploy Grafana
        run: flyctl deploy --config infra/grafana/fly.toml --remote-only

      - name: Verify health (Infra + APIs)
        run: |
          endpoints=(
            "https://paye-ton-kawa.fly.dev"
            "https://mspr-rabbitmq.fly.dev"
            "https://mspr-prometheus.fly.dev"
            "https://mspr-grafana.fly.dev/login"
            "https://mspr-api-clients.fly.dev"
            "https://mspr-api-produits.fly.dev"
            "https://mspr-api-commandes.fly.dev"
          )

          names=("Front Nginx" "RabbitMQ" "Prometheus" "Grafana" "API Clients" "API Produits" "API Commandes")

          for i in "${!endpoints[@]}"; do
            echo "⏳ Checking ${names[$i]} at ${endpoints[$i]}..."
            for attempt in {1..10}; do
              if curl -fsS "${endpoints[$i]}" >/dev/null 2>&1; then
                echo "✅ ${names[$i]} is healthy"
                break
              else
                echo "❌ ${names[$i]} not ready (attempt $attempt)"
                sleep 5
              fi
              if [ $attempt -eq 10 ]; then
                echo "💥 ${names[$i]} failed healthcheck"
                exit 1
              fi
            done
          done

