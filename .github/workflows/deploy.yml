name: Deploy Infra

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Start infra
        run: |
          export IMG_API_CLIENTS=ghcr.io/mgaisnon/mspr-api-clients:latest
          export IMG_API_PRODUITS=ghcr.io/mgaisnon/mspr-api-produits:latest
          export IMG_API_COMMANDES=ghcr.io/mgaisnon/mspr-api-commandes:latest

          docker compose -f docker-compose.yml pull
          docker compose -f docker-compose.yml up -d

      - name: Wait for DB & RabbitMQ healthchecks
        run: |
          services=("rabbitmq" "db-clients" "db-produits" "db-commandes")
          for service in "${services[@]}"; do
            echo "‚è≥ Waiting for $service..."
            for i in {1..20}; do
              status=$(docker inspect --format='{{json .State.Health.Status}}' $service || echo "null")
              if [[ "$status" == "\"healthy\"" ]]; then
                echo "‚úÖ $service is healthy"
                break
              else
                echo "‚ùå $service not ready (try $i)"
                sleep 5
              fi
              if [ $i -eq 20 ]; then
                echo "üí• $service failed healthcheck"
                docker logs $service
                exit 1
              fi
            done
          done

      - name: Check APIs containers are running
        run: |
          apis=("api-clients" "api-produits" "api-commandes")
          for api in "${apis[@]}"; do
            status=$(docker inspect --format='{{.State.Status}}' $api || echo "null")
            if [[ "$status" == "running" ]]; then
              echo "‚úÖ $api is running"
            else
              echo "üí• $api is not running"
              docker logs $api
              exit 1
            fi
          done

      - name: Show running containers
        run: docker ps -a
